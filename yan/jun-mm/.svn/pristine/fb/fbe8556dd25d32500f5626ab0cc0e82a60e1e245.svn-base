package com.junkj.module.company.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.junkj.common.action.BaseAction;
import com.junkj.common.entity.Page;
import com.junkj.common.form.FormToken;
import com.junkj.common.lang.NumUtils;
import com.junkj.common.lang.StrUtils;
import com.junkj.common.utils.UserUtils;
import com.junkj.common.vo.JsonVo;
import com.junkj.module.company.biz.ActivityBiz;
import com.junkj.module.company.biz.ActivityEnrollBiz;
import com.junkj.module.company.entity.Activity;
import com.junkj.module.company.entity.ActivityEnroll;
import com.junkj.module.member.biz.MemberBiz;
import com.junkj.module.member.biz.MemberCardBiz;
import com.junkj.module.member.biz.PointsBiz;
import com.junkj.module.member.entity.Member;
import com.junkj.module.member.entity.MemberCard;
import com.junkj.module.member.entity.Points;

/**
 * 活动报名action
 * 
 * @copyright 大连骏骁网络科技有限公司
 * @author 骏骁(cxmail@qq.com)
 * @createDate 2019年09月26日
 * @version: 1.0.0
 */
@Controller
@RequestMapping(value = "${adminPath}/activityEnroll")
public class ActivityEnrollAction extends BaseAction {

	@Autowired
	private ActivityEnrollBiz activityEnrollBiz;
	@Autowired
	private ActivityBiz activityBiz;
	@Autowired
	private MemberCardBiz cardBiz;
	@Autowired
	private MemberBiz memberBiz;
	@Autowired
	private PointsBiz pointsBiz;

	@RequiresPermissions("company:activity:view")
	@RequestMapping("")
	public String index(HttpServletRequest request, String id, String name) {
		request.setAttribute("id", id);
		request.setAttribute("activityName", name);
		return "/module/company/activityEnroll";
	}

	/**
	 * 分页数据
	 */
	@RequiresPermissions("company:activity:view")
	@RequestMapping(value = "listPage")
	@ResponseBody
	public Page<ActivityEnroll> listPage(ActivityEnroll activityEnroll) {
		Page<ActivityEnroll> page = activityEnrollBiz.findPage(activityEnroll);
		return page;
	}

	/**
	 * 列表数据
	 */
	@RequiresPermissions("company:activity:view")
	@RequestMapping(value = "findList")
	@ResponseBody
	public List<ActivityEnroll> findList(ActivityEnroll activityEnroll) {
		List<ActivityEnroll> list = activityEnrollBiz.findList(activityEnroll);
		return list;
	}

	/**
	 * 添加或更新
	 */
	@FormToken
	@RequiresPermissions("company:activity:edit")
	@RequestMapping(value = "save")
	@ResponseBody
	public JsonVo save(@Validated ActivityEnroll activityEnroll, BindingResult result) {
		if (result.hasErrors()) {
			return sendError(result.getFieldError().getDefaultMessage());
		}
		return activityEnrollBiz.saveActivityEnroll(activityEnroll);
	}

	/**
	 * 删除
	 */
	@RequiresPermissions("company:activity:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public JsonVo delete(ActivityEnroll activityEnroll) {
		activityEnrollBiz.delete(activityEnroll);
		return sendOk("删除成功！");
	}

	/**
	 * 签到
	 */
	@RequiresPermissions("company:course:edit")
	@RequestMapping(value = "qiandao")
	@ResponseBody
	public JsonVo qiandao(ActivityEnroll activityEnroll) {
		activityEnroll = activityEnrollBiz.get(activityEnroll.getId());
		// 获取活动
		Activity activity = activityBiz.get(activityEnroll.getActivityId());
		String mcId = null;
		if (StrUtils.notBlank(activity.getCardId())) {
			MemberCard cardWhere = new MemberCard();
			cardWhere.setCardId(activity.getCardId());
			cardWhere.setMemberId(activityEnroll.getMemberId());
			// 查询会员会员卡
			List<MemberCard> cardList = cardBiz.getMemberCardList(cardWhere);
			if (cardList.size() > 0) {
				for (MemberCard mCard : cardList) {
					// 判断余额
					if (mCard.getStoredNum() < activity.getCardNum()) {
						continue;
					}
					mcId = mCard.getId();
				}
				if (mcId == null) {
					return sendError("会员卡余额不足!");
				}
			} else {
				return sendError("没有满足条件的会员卡!");
			}
		}
		//活动签到积分
		Member member = memberBiz.get(activityEnroll.getMemberId());
		member.setPoints(String.valueOf(NumUtils.add(Double.valueOf(member.getPoints()),member.ACTIVITYPOINTS)));
		memberBiz.save(member);
		//积分记录
		Points points = new Points();
		points.setMemberId(activityEnroll.getMemberId());
		points.setBizId(activityEnroll.getId());
		points.setType(points.TYPE_1);
		points.setBizType(points.BIZTYPE_3);
		points.setNum(points.ACTIVITYPOINTS);
		pointsBiz.save(points);
		activityEnrollBiz.qiandao(activityEnroll, mcId);
		return sendOk("保存成功！");
	}
	
	/**
	 * 取消
	 */
	@RequiresPermissions("company:course:edit")
	@RequestMapping(value = "updateEnrollStatus")
	@ResponseBody
	public JsonVo updateEnrollStatus(ActivityEnroll activityEnroll) {
		activityEnrollBiz.updateEnrollStatus(activityEnroll);
		return sendOk("取消成功！");
	}

}