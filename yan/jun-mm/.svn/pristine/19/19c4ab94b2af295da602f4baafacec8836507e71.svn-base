package com.junkj.module.base;

import java.text.ParseException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import com.junkj.common.collect.ListUtils;
import com.junkj.common.lang.DateUtils;
import com.junkj.common.lang.StrUtils;
import com.junkj.common.utils.TplMsgUtils;
import com.junkj.module.company.biz.ActivityBiz;
import com.junkj.module.company.biz.CourseEnrollBiz;
import com.junkj.module.company.biz.WorkMsgBiz;
import com.junkj.module.company.entity.CourseEnroll;
import com.junkj.module.company.entity.WorkMsg;
import com.junkj.module.statistics.dao.StatisticsDao;
import com.junkj.module.weixin.biz.WxUserBiz;
import com.junkj.module.weixin.entity.WxUser;

@Component
public class Jobs {

	@Autowired
	private ActivityBiz activityBiz;
	@Autowired
	private StatisticsDao statisticsDao;
	@Autowired
	private WorkMsgBiz workMsgBiz;
	@Autowired
	private CourseEnrollBiz courseEnrollBiz;
	@Autowired
	private WxUserBiz wxUserBiz;
	// 1分钟执行一次
	@Scheduled(cron = "0 */1 * * * ?")
	public void cronJob() throws ParseException {
		// 更新活动状态
		activityBiz.updateAllStatus();
	}

	// 每天统计通知(每天23点执行一次)
	@Scheduled(cron = "0 0 23 * * ?")
	//@Scheduled(cron = "*/2 * * * * ?")
	public void dayStatisticsJob() throws ParseException {
		List<WorkMsg> list = statisticsDao.dayStatisticsJob();
		for (WorkMsg workMsg : list) {
			workMsgBiz.save(workMsg);
			String text = workMsg.getContent().replace("<br/>", "\n");
			WxUser where = new WxUser();
			where.setId(workMsg.getUserId());
			where = wxUserBiz.getByEntity(where);
			if(StrUtils.notBlank(where.getOpenid())){
				String openId = where.getOpenid();
				//每日统计
				new Thread() {
					public void run() {
						try {
							List<String> data = ListUtils.newArrayList();
							data.add(workMsg.getTitle());
							data.add(DateUtils.format(workMsg.getCreateTime(),"yyyy-MM-dd HH:ss"));
							data.add(text);
							data.add("今天又是愉快的一天！");
							TplMsgUtils.sendMsg(openId, "", TplMsgUtils.TPL_10, data);
						} catch (Exception e) {
							System.out.println("每日统计通知失败！");
						}
					}
				}.start();
			}
		}
	}
	// 评价通知(每天20点执行一次)
	@Scheduled(cron = "0 0 20 * * ?")
	// @Scheduled(cron = "*/2 * * * * ?")
	public void pingjia() throws ParseException {
		List<CourseEnroll> list = courseEnrollBiz.findPingjia();
		if (list != null) {
			list.forEach(enroll -> {
				List<String> data = ListUtils.newArrayList();
				data.add("您还未对以下课程进行评价");
				data.add(enroll.getCourseName());
				data.add(enroll.getCourseDate() + enroll.getEndTime());
				data.add("服务老师：" + enroll.getTeacherName());
				TplMsgUtils.sendMsg(enroll.getOpenId(), "", TplMsgUtils.TPL_7, data);

			});
		}
	}
}
