package com.junkj.common.shiro;

import java.util.List;

import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.AuthenticationInfo;
import org.apache.shiro.authc.AuthenticationToken;
import org.apache.shiro.authc.SimpleAuthenticationInfo;
import org.apache.shiro.authz.AuthorizationInfo;
import org.apache.shiro.authz.SimpleAuthorizationInfo;
import org.apache.shiro.realm.AuthorizingRealm;
import org.apache.shiro.subject.PrincipalCollection;
import org.apache.shiro.util.ByteSource;

import com.junkj.common.codec.Md5Utils;
import com.junkj.common.lang.StrUtils;
import com.junkj.common.utils.ComUtils;
import com.junkj.common.utils.UserUtils;
import com.junkj.module.sys.entity.SysUser;

public class ShiroRealm extends AuthorizingRealm {

	/**
	 * 授权认证
	 */
	@Override
	protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {
		SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo();

		// 查询角色权限列表
		List<String> list = UserUtils.getPermission();
		list.forEach(permission -> {
			if (StrUtils.notBlank(permission)) {
				authorizationInfo.addStringPermission(permission);
			}
		});
		return authorizationInfo;
	}

	/**
	 * 身份认证
	 */
	@Override
	protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authcToken)
			throws AuthenticationException {

		ShiroToken token = (ShiroToken) authcToken;

		// 获取用户的输入的账号.
		String username = (String) token.getPrincipal();
		SysUser user = UserUtils.getByLoginName(username);
		if (user == null) {
			return null;
		}
		if (!SysUser.STATUS_NORMAL.equals(user.getStatus())) {
			return null;
		}
		UserUtils.putSessionCache(ComUtils.RS_COM_ID, user.getComId());
		UserUtils.putSessionCache(ComUtils.RS_COM_NAME, user.getComName());
		ShiroUser shiroUser = new ShiroUser(user.getId(), user.getUsername(), token.getParams());
		return new SimpleAuthenticationInfo(shiroUser, user.getPassword(),
				ByteSource.Util.bytes(Md5Utils.md5(user.getUsername())), getName());

	}

}