package com.junkj.module.member.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.util.HtmlUtils;

import com.junkj.common.action.BaseAction;
import com.junkj.common.entity.Page;
import com.junkj.common.filter.JwtUtils;
import com.junkj.common.form.FormToken;
import com.junkj.common.lang.StrUtils;
import com.junkj.common.utils.ComUtils;
import com.junkj.common.utils.JsonUtils;
import com.junkj.common.utils.QrcodeUtils;
import com.junkj.common.utils.TplExcel;
import com.junkj.common.vo.JsonVo;
import com.junkj.module.member.biz.MemberBiz;
import com.junkj.module.member.entity.Member;
import com.junkj.module.sys.dao.ComboDao;

/**
 * 会员action
 * 
 * @copyright 大连骏骁网络科技有限公司
 * @author 骏骁(cxmail@qq.com)
 * @createDate 2019年09月26日
 */
@Controller
@RequestMapping(value = "${adminPath}/member")
public class MemberAction extends BaseAction {

	@Autowired
	private MemberBiz memberBiz;
	@Autowired
	private ComboDao comboDao;

	@RequiresPermissions("member:member:view")
	@RequestMapping("")
	public String index() {
		return "/module/member/member";
	}

	/**
	 * 分页数据
	 */
	@RequiresPermissions("member:member:view")
	@RequestMapping(value = "listPage")
	@ResponseBody
	public Page<Member> listPage(Member member) {
		Page<Member> page = memberBiz.findPage(member);
		return page;
	}

	/**
	 * 列表数据
	 */
	@RequiresPermissions("member:member:view")
	@RequestMapping(value = "findList")
	@ResponseBody
	public List<Member> findList(Member member) {
		List<Member> list = memberBiz.findList(member);
		return list;
	}

	/**
	 * 添加或更新
	 */
	@FormToken
	@RequiresPermissions("member:member:edit")
	@RequestMapping(value = "save")
	@ResponseBody
	public JsonVo save(@Validated Member member, BindingResult result) {
		if (result.hasErrors()) {
			return sendError(result.getFieldError().getDefaultMessage());
		}
		Member where = new Member();
		where.setPhone(member.getPhone());
		where = memberBiz.getByEntity(where);
		if (where != null && !where.getId().equals(member.getId())) {
			return sendError("手机号已存在!");
		}
		memberBiz.save(member);
		return sendOk("保存成功！");
	}

	/**
	 * 删除
	 */
	@RequiresPermissions("member:member:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public JsonVo delete(Member member) {
		memberBiz.delete(member);
		return sendOk("删除成功！");
	}

	/**
	 * 导出Excelmo模版
	 */
	@RequestMapping("/excelDownloadDemo")
	@RequiresPermissions("member:member:gets")
	@ResponseBody
	public void getExcelTemplate(HttpServletRequest request, HttpServletResponse response,
			@RequestParam Map<String, Object> params) {

		String fileName = "会员管理"; // 模板名称
		String[] handers = { "会员级别", "姓名", "手机", "QQ", "电子邮箱", "地址", "备注" }; // 列标题

		// 下拉框数据
		List<String[]> downData = new ArrayList<String[]>();

		List<Map<String, Object>> list = comboDao.findMemberLevel(ComUtils.getCurrentComId());
		String[] levelName = new String[list.size()];
		int i = 0;
		for (Map<String, Object> map : list) {
			levelName[i] = map.get("name").toString();
			i++;
		}
		// 会员等级
		downData.add(levelName);
		String[] downRows = { "0" }; // 下拉的列序号数组(序号从0开始)
		TplExcel.getExcelTemplate(request, response, fileName, handers, downData, downRows);

	}

	/**
	 * 导入Excel
	 */
	@FormToken
	@RequiresPermissions("member:member:gets")
	@RequestMapping(value = "/importExcelDownload")
	@ResponseBody
	public Object importExcelDownload(@RequestParam MultipartFile excelFile) {
		Map<String, Object> data = memberBiz.saveMemberGetList(excelFile);
		return JsonUtils.toString(data);
	}

	/**
	 * 导出
	 */
	@SuppressWarnings("unchecked")
	@RequiresPermissions("member:member:export")
	@RequestMapping(value = "/excelDownload", method = RequestMethod.GET)
	@ResponseBody
	public void excelDownload(HttpServletResponse response, Member member, @RequestParam Map<String, Object> params) {
		List<Member> list = memberBiz.findList(member);
		if (StrUtils.notBlank(params.get("col"))) {
			String data = HtmlUtils.htmlUnescape(params.get("col").toString());
			List<Map<String, Object>> colList = JsonUtils.toObject(data, List.class);
			String[] headerColumns = new String[colList.size()];
			String[] fieldColumns = new String[colList.size()];
			for (int index = 0; index < colList.size(); index++) {
				Map<String, Object> map = colList.get(index);
				headerColumns[index] = "" + map.get("name").toString() + "_#_" + map.get("width").toString() + "";
				fieldColumns[index] = "" + map.get("col").toString();
			}
			excelDownloadT(response, list, "会员管理", headerColumns, fieldColumns);
		}
	}

	/**
	 * 获取绑定二维码
	 */
	@RequiresPermissions("member:member:view")
	@RequestMapping(value = "getBindCode")
	@ResponseBody
	public Object getBindCode(Member member) {
		Map<String, Object> obj = new HashMap<String, Object>();
		obj.put("mid", member.getId());
		String token = JwtUtils.generateToken(obj);
		String data = ComUtils.getComUrl("/m/bindMember?token"+token);
		String str = QrcodeUtils.createCodeBase64(data);
		return sendData(str);
	}

}