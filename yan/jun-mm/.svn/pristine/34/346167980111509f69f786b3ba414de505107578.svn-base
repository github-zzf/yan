package com.junkj.common.utils;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.shiro.session.Session;

import com.junkj.common.action.http.ServletUtils;
import com.junkj.common.exception.SpringUtils;
import com.junkj.common.lang.ObjectUtils;
import com.junkj.common.lang.StrUtils;
import com.junkj.module.company.biz.ComTemplateBiz;
import com.junkj.module.sys.biz.SysCompanyBiz;
import com.junkj.module.sys.entity.SysCompany;
import com.junkj.module.weixin.biz.WxConfigBiz;
import com.junkj.module.weixin.entity.WxConfig;

public class ComUtils {

	private static SysCompanyBiz sysCompanyBiz = SpringUtils.getBean(SysCompanyBiz.class);
	private static WxConfigBiz wxConfigBiz = SpringUtils.getBean(WxConfigBiz.class);
	private static ComTemplateBiz comTemplateBiz = SpringUtils.getBean(ComTemplateBiz.class);

	public static final String DEFAULT_COM_NAME = "junkj";
	public static final String DEFAULT_COM_ID = "0";
	public static final String RS_COM_ID = "COM_ID";
	public static final String RS_COM_NAME = "COM_NAME";
	public static final String CACHE_COM_ID_ = "COM_ID_";
	public static final String CACHE_COM_TPL_ = "COM_TPL_";
	public static final String CACHE_COM_WXCONFIG = "WXCONFIG";

	/**
	 * 通过request、session获取公司名称
	 */
	public static String getCurrentComName() {
		return getRSCach(RS_COM_NAME, DEFAULT_COM_NAME);
	}

	/**
	 * 通过request、session获取公司id
	 */
	public static String getCurrentComId() {
		return getRSCach(RS_COM_ID, DEFAULT_COM_ID);
	}

	private static String getRSCach(String key, String defaultVal) {
		String value = null;
		HttpServletRequest request = ServletUtils.getRequest();
		if (request != null) {
			value = ObjectUtils.toString(request.getAttribute(key));
		}

		if (StrUtils.isBlank(value)) {
			Session session = UserUtils.getSubject().getSession(false);
			if (session != null) {
				value = ObjectUtils.toString(session.getAttribute(key));
			}
		}

		if (value == null) {
			value = defaultVal;
		}

		if (request != null) {
			request.setAttribute(key, value);
		}
		return ObjectUtils.toStringIgnoreNull(value);
	}

	/**
	 * 获取公司
	 */
	public static SysCompany getCurrentCom() {
		return getById(getCurrentComId());
	}

	/**
	 * 根据ID获取公司
	 */
	public static synchronized SysCompany getById(String id) {
		SysCompany company = getCache(id);
		if (company == null) {
			company = sysCompanyBiz.get(id);
			if (company != null) {
				putCache(id, company);
			}
		}
		return company;
	}

	/**
	 * 根据ID获取公司配置
	 */
	public static synchronized WxConfig getWxConfig() {
		WxConfig wxConfig = getCache(CACHE_COM_WXCONFIG);
		if (wxConfig == null) {
			wxConfig = wxConfigBiz.getByComId(getCurrentComId());
			if (wxConfig != null) {
				putCache(CACHE_COM_WXCONFIG, wxConfig);
			}
		}
		return wxConfig;
	}

	/**
	 * 根据ID获取模板消息
	 */
	public static List<Template> getTemplate(String key) {
		List<Template> tpls = getCache(CACHE_COM_TPL_ + key);
		if (tpls == null) {
			tpls = comTemplateBiz.getByCode(key);
			if (tpls != null) {
				putCache(CACHE_COM_TPL_ + key, tpls);
			}
		}
		return tpls;
	}

	@SuppressWarnings("unchecked")
	public static <V> V getCache(String key) {
		key = CACHE_COM_ID_.concat(getCurrentComId()).concat("__").concat(key);
		return (V) CacheUtils.get(CacheUtils.COM_CACHE, key);
	}

	public static void putCache(String key, Object value) {
		key = CACHE_COM_ID_.concat(getCurrentComId()).concat("__").concat(key);
		CacheUtils.put(CacheUtils.COM_CACHE, key, value);
	}

	/**
	 * 删除企业配置缓存
	 */
	public static void removeCache(String key) {
		key = CACHE_COM_ID_.concat(getCurrentComId()).concat("__").concat(key);
		CacheUtils.remove(CacheUtils.COM_CACHE, key);
	}

}